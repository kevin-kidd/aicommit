name: Canary Release

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches: [master]

jobs:
  check-and-release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        run: |
          echo "files=$(git diff --name-only ${{ github.event.workflow_run.head_sha }}^ ${{ github.event.workflow_run.head_sha }} | grep '^packages/aicommit/' | wc -l)" >> $GITHUB_OUTPUT

      - name: Setup Bun
        if: steps.changed-files.outputs.files != '0'
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js
        if: steps.changed-files.outputs.files != '0'
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Cache dependencies
        if: steps.changed-files.outputs.files != '0'
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun
            **/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        if: steps.changed-files.outputs.files != '0'
        run: bun install
        working-directory: packages/aicommit

      - name: Build
        if: steps.changed-files.outputs.files != '0'
        run: bun run build
        working-directory: packages/aicommit

      - name: Publish canary version
        if: steps.changed-files.outputs.files != '0'
        working-directory: packages/aicommit
        run: |
          current_version=$(node -p "require('./package.json').version")
          latest_canary=$(npm view @kkidd/aicommit dist-tags.canary)
          if [[ $latest_canary == *"$current_version-canary."* ]]; then
            canary_number=$(echo $latest_canary | sed -E 's/.*canary\.([0-9]+)$/\1/')
            next_canary=$((canary_number + 1))
            next_version="$current_version-canary.$next_canary"
          else
            next_version="$current_version-canary.0"
          fi
          echo "Publishing version $next_version"
          npm version $next_version --no-git-tag-version --allow-same-version
          npm publish --tag canary --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}